version: '3.8'
services:
  api:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - server/.env
    depends_on:
      - db
    restart: on-failure
    container_name: api

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
    ports:
      - 5432:5432
    restart: always
    container_name: db

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  low_priority_worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A server worker -Q low_priority_queue --loglevel=info -P gevent
    depends_on:
      - redis
      - db
    env_file:
      - server/.env
    container_name: low_priority_worker

  high_priority_worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A server worker -Q high_priority_queue --loglevel=info -P gevent
    depends_on:
      - redis
      - db
    env_file:
      - server/.env
    container_name: high_priority_worker

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A server flower
    links:
      - redis
    depends_on:
      - redis
    ports:
      - 5555:5555
